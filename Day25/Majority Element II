import java.util.*;
class Solution {
    public List<Integer> majorityElement(int[] nums) {
        //Brute Force   TC = O(n*n) SC = O(1)
        int n = nums.length;
        List<Integer> ls = new ArrayList<>();
        // for(int i=0;i<n;i++){
        //     if(ls.size()==0 || ls.get(0) != nums[i]){
        //         int cnt = 0;
        //         for(int j=0;j<n;j++){
        //             if(nums[j]==nums[i])
        //                 cnt++;
        //         }
        //         if(cnt > n/3)
        //             ls.add(nums[i]);
        //     }
        //     if(ls.size()==2) break;
        // }
        // return ls;
        // Better sol.  TC = O(n) SC = O(n)
        HashMap<Integer,Integer> hm = new HashMap<>();
        int mini = (int)(n/3) + 1;
        for(int i=0;i<n;i++){
            hm.put(nums[i],hm.getOrDefault(nums[i],0)+1);
            if(hm.get(nums[i]) == mini)
                ls.add(nums[i]);
            if(ls.size()==2) break;
        }
        return ls;
    }
}
