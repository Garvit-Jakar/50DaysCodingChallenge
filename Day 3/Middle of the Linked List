/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
    //Brute  force
    //     //count no. of nodes
    //     int count = 0;
    //     ListNode temp = head;
    //     while(temp != null){
    //         count++;
    //         temp = temp.next;
    //     }
    //     //find middle
    //     int mid = count/2;
    //     temp = head;
    //     while(mid > 0){
    //         temp = temp.next;
    //         mid--;
    //     }
    //     return temp;
    
        //Tortoise method 
        //using 2 nodes slow which moves 1 and fast which moves 2 postions
        ListNode slow = head, fast = head;
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
}
