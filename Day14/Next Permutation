class Solution {  
    public void nextPermutation(int[] nums) {
        int n = nums.length;
        // find break point
        int ind = -1;
        for(int i=n-2;i>=0;i--){
            if(nums[i] < nums[i+1]){
                ind = i;
                break;
            }
        }
        if(ind == -1)
            reverse(nums, 0, n-1);
        // find greater the ind
        else{
            for(int i=n-1;i>ind;i--){
                if(nums[i] > nums[ind])
                    swap(nums, i, ind);
                    break;
            }

            //place remaining in sorted order____reverse
            reverse(nums, ind+1, n-1);
        }
    }

    public void reverse(int[] nums, int start, int last){
        while(start<last){
            swap(nums, start, last);
            start++;
            last--;
        }
    }

    public void swap(int[] nums, int a,int b){
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
}
// TC = O(N), SC = 0(1)
